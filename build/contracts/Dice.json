{
  "contractName": "Dice",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Dice.direction",
          "name": "_direction",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "playLog",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cryptoSalt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "playerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_salt",
          "type": "uint256"
        }
      ],
      "name": "setSalt",
      "outputs": [
        {
          "internalType": "enum Dice.result",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "initialisation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlayerInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "enum Dice.direction",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "enum Dice.result",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum Dice.direction",
          "name": "_direction",
          "type": "uint8"
        }
      ],
      "name": "playDice",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Dice.direction\",\"name\":\"_direction\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"playLog\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cryptoSalt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlayerInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"enum Dice.direction\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"enum Dice.result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialisation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Dice.direction\",\"name\":\"_direction\",\"type\":\"uint8\"}],\"name\":\"playDice\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"playerAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_salt\",\"type\":\"uint256\"}],\"name\":\"setSalt\",\"outputs\":[{\"internalType\":\"enum Dice.result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Dice.sol\":\"Dice\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Dice.sol\":{\"keccak256\":\"0x8112a36d90a126db80ad88eb5be1296d6ba8bb1698c33385408a8136570d29e0\",\"urls\":[\"bzz-raw://29caae9872d7a93cc1ff6771c8be7f0a9e61ba06b298b83f87f5f7e43b50a2cd\",\"dweb:/ipfs/QmWTZTyHLPxGTr3KPzVhshkAiHJahceTkkZN3zwB8xcsek\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061aaaa6001819055506114b8806100696000396000f3fe60806040526004361061007b5760003560e01c8063a6317b6f1161004e578063a6317b6f1461012a578063d1df81df14610146578063dbdff2c114610174578063e2eb41ff1461019f5761007b565b806359483e1a14610080578063596dbaa5146100ab5780635e0cc9c6146100c25780638da5cb5b146100ff575b600080fd5b34801561008c57600080fd5b506100956101dc565b6040516100a29190610eec565b60405180910390f35b3480156100b757600080fd5b506100c06101e2565b005b3480156100ce57600080fd5b506100e960048036038101906100e49190610f38565b610265565b6040516100f69190610fdc565b60405180910390f35b34801561010b57600080fd5b50610114610277565b6040516101219190611038565b60405180910390f35b610144600480360381019061013f9190611078565b61029b565b005b34801561015257600080fd5b5061015b610b98565b60405161016b949392919061112a565b60405180910390f35b34801561018057600080fd5b50610189610e5e565b6040516101969190610eec565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c1919061119b565b610e95565b6040516101d39190611038565b60405180910390f35b60015481565b33600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008160018190555060009050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060028111156102af576102ae610f65565b5b8160028111156102c2576102c1610f65565b5b14806102f25750600160028111156102dd576102dc610f65565b5b8160028111156102f0576102ef610f65565b5b145b80610320575060028081111561030b5761030a610f65565b5b81600281111561031e5761031d610f65565b5b145b61035f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035690611225565b60405180910390fd5b6000606561036b610e5e565b6103759190611274565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360ff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083600281111561048b5761048a610f65565b5b02179055507fe9292d8d1e39a1684e5c8f41f67409c6f88e062828e3cf5f732c3136b04b4e53600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168284346040516105279493929190611304565b60405180910390a16000600281111561054357610542610f65565b5b82600281111561055657610555610f65565b5b0361074e5760328111156106b357600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002346105ed9190611378565b9081150290604051600060405180830381858888f19350505050158015610618573d6000803e3d6000fd5b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360038111156106a9576106a8610f65565b5b0217905550610749565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600390806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083600381111561074357610742610f65565b5b02179055505b610b94565b6001600281111561076257610761610f65565b5b82600281111561077557610774610f65565b5b0361096d5760318110156108d257600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60023461080c9190611378565b9081150290604051600060405180830381858888f19350505050158015610837573d6000803e3d6000fd5b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360038111156108c8576108c7610f65565b5b0217905550610968565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600390806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083600381111561096257610961610f65565b5b02179055505b610b93565b6002808111156109805761097f610f65565b5b82600281111561099357610992610f65565b5b03610b925760318114806109a75750603281145b15610afb57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a34610a359190611378565b9081150290604051600060405180830381858888f19350505050158015610a60573d6000803e3d6000fd5b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff02191690836003811115610af157610af0610f65565b5b0217905550610b91565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600390806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff02191690836003811115610b8b57610b8a610f65565b5b02179055505b5b5b5b5050565b600080600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050610c9591906113d2565b81548110610ca657610ca5611406565b5b90600052602060002090602091828204019190069054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020180549050610d5a91906113d2565b81548110610d6b57610d6a611406565b5b90600052602060002090602091828204019190069054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180549050610e1f91906113d2565b81548110610e3057610e2f611406565b5b90600052602060002090602091828204019190069054906101000a900460ff16935093509350935090919293565b6000600154441842604051602001610e77929190611456565b6040516020818303038152906040528051906020012060001c905090565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000819050919050565b610ee681610ed3565b82525050565b6000602082019050610f016000830184610edd565b92915050565b600080fd5b610f1581610ed3565b8114610f2057600080fd5b50565b600081359050610f3281610f0c565b92915050565b600060208284031215610f4e57610f4d610f07565b5b6000610f5c84828501610f23565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa557610fa4610f65565b5b50565b6000819050610fb682610f94565b919050565b6000610fc682610fa8565b9050919050565b610fd681610fbb565b82525050565b6000602082019050610ff16000830184610fcd565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102282610ff7565b9050919050565b61103281611017565b82525050565b600060208201905061104d6000830184611029565b92915050565b6003811061106057600080fd5b50565b60008135905061107281611053565b92915050565b60006020828403121561108e5761108d610f07565b5b600061109c84828501611063565b91505092915050565b60006110b082610ff7565b9050919050565b6110c0816110a5565b82525050565b600060ff82169050919050565b6110dc816110c6565b82525050565b600381106110f3576110f2610f65565b5b50565b6000819050611104826110e2565b919050565b6000611114826110f6565b9050919050565b61112481611109565b82525050565b600060808201905061113f60008301876110b7565b61114c60208301866110d3565b611159604083018561111b565b6111666060830184610fcd565b95945050505050565b611178816110a5565b811461118357600080fd5b50565b6000813590506111958161116f565b92915050565b6000602082840312156111b1576111b0610f07565b5b60006111bf84828501611186565b91505092915050565b600082825260208201905092915050565b7f57726f6e672076616c7565000000000000000000000000000000000000000000600082015250565b600061120f600b836111c8565b915061121a826111d9565b602082019050919050565b6000602082019050818103600083015261123e81611202565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061127f82610ed3565b915061128a83610ed3565b92508261129a57611299611245565b5b828206905092915050565b6000819050919050565b60006112ca6112c56112c084610ff7565b6112a5565b610ff7565b9050919050565b60006112dc826112af565b9050919050565b60006112ee826112d1565b9050919050565b6112fe816112e3565b82525050565b600060808201905061131960008301876112f5565b6113266020830186610edd565b611333604083018561111b565b6113406060830184610edd565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061138382610ed3565b915061138e83610ed3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c7576113c6611349565b5b828202905092915050565b60006113dd82610ed3565b91506113e883610ed3565b9250828210156113fb576113fa611349565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b61145061144b82610ed3565b611435565b82525050565b6000611462828561143f565b602082019150611472828461143f565b602082019150819050939250505056fea2646970667358221220f5019d6ba94f282f8f541762b20994ef8d3d91d966845b2a287d834f487de01164736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063a6317b6f1161004e578063a6317b6f1461012a578063d1df81df14610146578063dbdff2c114610174578063e2eb41ff1461019f5761007b565b806359483e1a14610080578063596dbaa5146100ab5780635e0cc9c6146100c25780638da5cb5b146100ff575b600080fd5b34801561008c57600080fd5b506100956101dc565b6040516100a29190610eec565b60405180910390f35b3480156100b757600080fd5b506100c06101e2565b005b3480156100ce57600080fd5b506100e960048036038101906100e49190610f38565b610265565b6040516100f69190610fdc565b60405180910390f35b34801561010b57600080fd5b50610114610277565b6040516101219190611038565b60405180910390f35b610144600480360381019061013f9190611078565b61029b565b005b34801561015257600080fd5b5061015b610b98565b60405161016b949392919061112a565b60405180910390f35b34801561018057600080fd5b50610189610e5e565b6040516101969190610eec565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c1919061119b565b610e95565b6040516101d39190611038565b60405180910390f35b60015481565b33600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008160018190555060009050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060028111156102af576102ae610f65565b5b8160028111156102c2576102c1610f65565b5b14806102f25750600160028111156102dd576102dc610f65565b5b8160028111156102f0576102ef610f65565b5b145b80610320575060028081111561030b5761030a610f65565b5b81600281111561031e5761031d610f65565b5b145b61035f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035690611225565b60405180910390fd5b6000606561036b610e5e565b6103759190611274565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360ff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083600281111561048b5761048a610f65565b5b02179055507fe9292d8d1e39a1684e5c8f41f67409c6f88e062828e3cf5f732c3136b04b4e53600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168284346040516105279493929190611304565b60405180910390a16000600281111561054357610542610f65565b5b82600281111561055657610555610f65565b5b0361074e5760328111156106b357600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002346105ed9190611378565b9081150290604051600060405180830381858888f19350505050158015610618573d6000803e3d6000fd5b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360038111156106a9576106a8610f65565b5b0217905550610749565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600390806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083600381111561074357610742610f65565b5b02179055505b610b94565b6001600281111561076257610761610f65565b5b82600281111561077557610774610f65565b5b0361096d5760318110156108d257600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60023461080c9190611378565b9081150290604051600060405180830381858888f19350505050158015610837573d6000803e3d6000fd5b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360038111156108c8576108c7610f65565b5b0217905550610968565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600390806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083600381111561096257610961610f65565b5b02179055505b610b93565b6002808111156109805761097f610f65565b5b82600281111561099357610992610f65565b5b03610b925760318114806109a75750603281145b15610afb57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a34610a359190611378565b9081150290604051600060405180830381858888f19350505050158015610a60573d6000803e3d6000fd5b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff02191690836003811115610af157610af0610f65565b5b0217905550610b91565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600390806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff02191690836003811115610b8b57610b8a610f65565b5b02179055505b5b5b5b5050565b600080600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050610c9591906113d2565b81548110610ca657610ca5611406565b5b90600052602060002090602091828204019190069054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020180549050610d5a91906113d2565b81548110610d6b57610d6a611406565b5b90600052602060002090602091828204019190069054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180549050610e1f91906113d2565b81548110610e3057610e2f611406565b5b90600052602060002090602091828204019190069054906101000a900460ff16935093509350935090919293565b6000600154441842604051602001610e77929190611456565b6040516020818303038152906040528051906020012060001c905090565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000819050919050565b610ee681610ed3565b82525050565b6000602082019050610f016000830184610edd565b92915050565b600080fd5b610f1581610ed3565b8114610f2057600080fd5b50565b600081359050610f3281610f0c565b92915050565b600060208284031215610f4e57610f4d610f07565b5b6000610f5c84828501610f23565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa557610fa4610f65565b5b50565b6000819050610fb682610f94565b919050565b6000610fc682610fa8565b9050919050565b610fd681610fbb565b82525050565b6000602082019050610ff16000830184610fcd565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102282610ff7565b9050919050565b61103281611017565b82525050565b600060208201905061104d6000830184611029565b92915050565b6003811061106057600080fd5b50565b60008135905061107281611053565b92915050565b60006020828403121561108e5761108d610f07565b5b600061109c84828501611063565b91505092915050565b60006110b082610ff7565b9050919050565b6110c0816110a5565b82525050565b600060ff82169050919050565b6110dc816110c6565b82525050565b600381106110f3576110f2610f65565b5b50565b6000819050611104826110e2565b919050565b6000611114826110f6565b9050919050565b61112481611109565b82525050565b600060808201905061113f60008301876110b7565b61114c60208301866110d3565b611159604083018561111b565b6111666060830184610fcd565b95945050505050565b611178816110a5565b811461118357600080fd5b50565b6000813590506111958161116f565b92915050565b6000602082840312156111b1576111b0610f07565b5b60006111bf84828501611186565b91505092915050565b600082825260208201905092915050565b7f57726f6e672076616c7565000000000000000000000000000000000000000000600082015250565b600061120f600b836111c8565b915061121a826111d9565b602082019050919050565b6000602082019050818103600083015261123e81611202565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061127f82610ed3565b915061128a83610ed3565b92508261129a57611299611245565b5b828206905092915050565b6000819050919050565b60006112ca6112c56112c084610ff7565b6112a5565b610ff7565b9050919050565b60006112dc826112af565b9050919050565b60006112ee826112d1565b9050919050565b6112fe816112e3565b82525050565b600060808201905061131960008301876112f5565b6113266020830186610edd565b611333604083018561111b565b6113406060830184610edd565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061138382610ed3565b915061138e83610ed3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c7576113c6611349565b5b828202905092915050565b60006113dd82610ed3565b91506113e883610ed3565b9250828210156113fb576113fa611349565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b61145061144b82610ed3565b611435565b82525050565b6000611462828561143f565b602082019150611472828461143f565b602082019150819050939250505056fea2646970667358221220f5019d6ba94f282f8f541762b20994ef8d3d91d966845b2a287d834f487de01164736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10144:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:1",
                "type": ""
              }
            ],
            "src": "90:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:1",
                "type": ""
              }
            ],
            "src": "214:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:1",
                "type": ""
              }
            ],
            "src": "442:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:1",
                "type": ""
              }
            ],
            "src": "769:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:1",
                "type": ""
              }
            ],
            "src": "897:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:1",
                "type": ""
              }
            ],
            "src": "1042:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1405:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1415:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1415:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1415:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1519:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1522:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1512:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1512:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1512:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1543:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1546:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1536:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1536:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1536:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1377:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1615:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1649:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1651:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1651:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1651:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1638:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1645:1:1",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1635:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1635:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1625:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_result_$10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1608:5:1",
                "type": ""
              }
            ],
            "src": "1563:114:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1737:75:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1747:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1758:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1747:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1800:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_result_$10",
                      "nodeType": "YulIdentifier",
                      "src": "1764:35:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:42:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1764:42:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_result_$10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1719:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1729:7:1",
                "type": ""
              }
            ],
            "src": "1683:129:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1885:62:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1895:46:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1935:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_result_$10",
                      "nodeType": "YulIdentifier",
                      "src": "1908:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:33:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1895:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_result_$10_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1865:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1875:9:1",
                "type": ""
              }
            ],
            "src": "1818:129:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2025:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2042:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2085:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_result_$10_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2047:37:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2047:44:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2035:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:57:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2035:57:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_result_$10_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2013:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2020:3:1",
                "type": ""
              }
            ],
            "src": "1953:145:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2209:131:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2219:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2231:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2242:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2227:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2227:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2219:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2306:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2319:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2330:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2315:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2315:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_result_$10_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2255:50:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2255:78:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2255:78:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_result_$10__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2181:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2193:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2204:4:1",
                "type": ""
              }
            ],
            "src": "2104:236:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2391:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2401:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2416:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2423:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2412:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2412:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2401:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2373:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2383:7:1",
                "type": ""
              }
            ],
            "src": "2346:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2531:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2541:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2570:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2552:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2552:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2541:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2513:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2523:7:1",
                "type": ""
              }
            ],
            "src": "2478:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2669:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2686:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2717:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2691:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2691:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2679:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2679:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2657:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2664:3:1",
                "type": ""
              }
            ],
            "src": "2588:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2860:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2872:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2883:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2868:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2868:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2860:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2956:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2969:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2980:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2965:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2965:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2896:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2896:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2822:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2834:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2845:4:1",
                "type": ""
              }
            ],
            "src": "2736:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3051:56:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3085:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3094:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3097:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3087:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3087:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3087:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3074:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3081:1:1",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3071:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3071:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3064:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3064:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3061:40:1"
                }
              ]
            },
            "name": "validator_revert_t_enum$_direction_$14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3044:5:1",
                "type": ""
              }
            ],
            "src": "2996:111:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3177:99:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3187:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3209:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3196:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3187:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3264:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_direction_$14",
                      "nodeType": "YulIdentifier",
                      "src": "3225:38:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3225:45:1"
                }
              ]
            },
            "name": "abi_decode_t_enum$_direction_$14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3155:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3163:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3171:5:1",
                "type": ""
              }
            ],
            "src": "3113:163:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3360:275:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3406:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3408:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3408:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3408:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3381:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3390:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3377:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3377:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3402:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3373:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3373:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3370:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3499:129:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3514:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3528:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3518:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3543:75:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3590:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3601:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3586:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3586:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3610:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_direction_$14",
                          "nodeType": "YulIdentifier",
                          "src": "3553:32:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3553:65:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3543:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_direction_$14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3330:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3341:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3353:6:1",
                "type": ""
              }
            ],
            "src": "3282:353:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3686:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3696:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3725:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3707:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3696:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3668:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3678:7:1",
                "type": ""
              }
            ],
            "src": "3641:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3808:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3825:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3848:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3830:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3830:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3818:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3818:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3818:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3796:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3803:3:1",
                "type": ""
              }
            ],
            "src": "3743:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3910:43:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3920:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3935:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3942:4:1",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3931:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3931:16:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3920:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3892:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3902:7:1",
                "type": ""
              }
            ],
            "src": "3867:86:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4020:51:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4037:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4058:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4042:15:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4042:22:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4030:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:35:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4030:35:1"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4008:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4015:3:1",
                "type": ""
              }
            ],
            "src": "3959:112:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4132:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4166:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "4168:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4168:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4168:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4155:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4162:1:1",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4152:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4152:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4145:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4145:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4142:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_direction_$14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4125:5:1",
                "type": ""
              }
            ],
            "src": "4077:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4257:78:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4267:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4278:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4267:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4323:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_direction_$14",
                      "nodeType": "YulIdentifier",
                      "src": "4284:38:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4284:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4284:45:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_direction_$14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4239:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4249:7:1",
                "type": ""
              }
            ],
            "src": "4200:135:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4411:65:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4421:49:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4464:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_direction_$14",
                      "nodeType": "YulIdentifier",
                      "src": "4434:29:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4434:36:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4421:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_direction_$14_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4391:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4401:9:1",
                "type": ""
              }
            ],
            "src": "4341:135:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4557:76:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4574:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4620:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_direction_$14_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4579:40:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4579:47:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4567:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4567:60:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4567:60:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_direction_$14_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4545:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4552:3:1",
                "type": ""
              }
            ],
            "src": "4482:151:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4834:384:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4844:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4856:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4867:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4852:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4852:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4844:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4925:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4938:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4949:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4934:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4934:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4881:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4881:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4881:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5002:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5015:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5026:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5011:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5011:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4962:39:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4962:68:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4962:68:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5094:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5107:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5118:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5103:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5103:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_direction_$14_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5040:53:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5040:82:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5040:82:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5183:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5196:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5207:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5192:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5192:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_result_$10_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5132:50:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5132:79:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5132:79:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint8_t_enum$_direction_$14_t_enum$_result_$10__to_t_address_t_uint8_t_uint8_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4782:9:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4794:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4802:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4810:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4818:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4829:4:1",
                "type": ""
              }
            ],
            "src": "4639:579:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5267:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5324:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5333:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5336:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5326:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5326:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5326:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5290:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5315:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5297:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5297:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5287:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5287:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5280:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5280:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "5277:63:1"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5260:5:1",
                "type": ""
              }
            ],
            "src": "5224:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5404:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5414:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5436:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5423:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5423:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5414:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5479:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5452:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5452:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5452:33:1"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5382:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5390:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5398:5:1",
                "type": ""
              }
            ],
            "src": "5352:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5563:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5609:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5611:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5611:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5611:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5584:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5593:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5580:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5580:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5605:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5576:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5576:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "5573:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5702:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5717:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5731:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5721:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5746:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5781:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5792:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5777:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5777:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5801:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5756:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5756:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5746:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5533:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5544:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5556:6:1",
                "type": ""
              }
            ],
            "src": "5497:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5928:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5945:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5950:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5938:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5938:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5938:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5966:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5985:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5990:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5981:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5966:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5900:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5905:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5916:11:1",
                "type": ""
              }
            ],
            "src": "5832:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6113:55:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6135:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6143:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6131:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6131:14:1"
                      },
                      {
                        "hexValue": "57726f6e672076616c7565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6147:13:1",
                        "type": "",
                        "value": "Wrong value"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6124:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6124:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6124:37:1"
                }
              ]
            },
            "name": "store_literal_in_memory_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6105:6:1",
                "type": ""
              }
            ],
            "src": "6007:161:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6320:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6330:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6396:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6401:2:1",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6337:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6337:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6330:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6502:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
                      "nodeType": "YulIdentifier",
                      "src": "6413:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6413:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6413:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6515:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6526:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6531:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6522:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6522:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6515:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6308:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6316:3:1",
                "type": ""
              }
            ],
            "src": "6174:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6717:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6727:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6739:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6750:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6735:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6735:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6727:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6774:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6785:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6770:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6770:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6793:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6799:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6789:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6789:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6763:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6763:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6763:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6819:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6953:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6827:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6827:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6819:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6697:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6712:4:1",
                "type": ""
              }
            ],
            "src": "6546:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6999:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7016:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7019:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7009:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7009:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7009:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7113:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7116:4:1",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7106:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7106:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7106:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7137:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7140:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7130:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7130:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7130:15:1"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "6971:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7191:142:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7201:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7224:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7206:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7206:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7201:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7235:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7258:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7240:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7240:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7235:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7282:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "7284:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7284:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7284:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7279:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7272:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7272:9:1"
                  },
                  "nodeType": "YulIf",
                  "src": "7269:35:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7313:14:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7322:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7325:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "7318:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7318:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7313:1:1"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7180:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7183:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7189:1:1",
                "type": ""
              }
            ],
            "src": "7157:176:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7371:28:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7381:12:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7388:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7381:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7357:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7367:3:1",
                "type": ""
              }
            ],
            "src": "7339:60:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7465:82:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7475:66:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7533:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "7515:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7515:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "7506:8:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7506:34:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7488:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7488:53:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7475:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7445:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7455:9:1",
                "type": ""
              }
            ],
            "src": "7405:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7613:66:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7623:50:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7667:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7636:30:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7636:37:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7623:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7593:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7603:9:1",
                "type": ""
              }
            ],
            "src": "7553:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7753:66:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7763:50:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7807:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "7776:30:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7776:37:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7763:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7733:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7743:9:1",
                "type": ""
              }
            ],
            "src": "7685:134:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7898:74:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7915:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7959:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7920:38:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7920:45:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7908:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7908:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7908:58:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7886:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7893:3:1",
                "type": ""
              }
            ],
            "src": "7825:147:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8178:389:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8188:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8200:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8211:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8196:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8196:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8188:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8277:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8290:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8301:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8286:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8286:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8225:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8225:79:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8225:79:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8358:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8371:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8382:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8367:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8367:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8314:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8314:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8314:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8450:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8463:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8474:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8459:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8459:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_direction_$14_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8396:53:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8396:82:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8396:82:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8532:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8545:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8556:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8541:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8541:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8488:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8488:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8488:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256_t_enum$_direction_$14_t_uint256__to_t_address_t_uint256_t_uint8_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8126:9:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8138:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8146:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8154:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8162:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8173:4:1",
                "type": ""
              }
            ],
            "src": "7978:589:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8601:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8618:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8621:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8611:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8611:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8611:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8715:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8718:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8708:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8708:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8708:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8739:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8742:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8732:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8732:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8732:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8573:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8807:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8817:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8840:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8822:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8822:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8817:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8851:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8874:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8856:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8856:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8851:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9049:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9051:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9051:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9051:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8961:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8954:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8954:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8947:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8947:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8969:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8976:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9044:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8972:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8972:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8966:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8966:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8943:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8943:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "8940:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9081:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9096:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9099:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9092:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9092:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "9081:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8790:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8793:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8799:7:1",
                "type": ""
              }
            ],
            "src": "8759:348:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9158:146:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9168:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9191:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9173:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9173:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9168:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9202:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9225:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9207:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9207:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9202:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9249:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9251:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9251:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9251:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9243:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9246:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9240:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9240:8:1"
                  },
                  "nodeType": "YulIf",
                  "src": "9237:34:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9281:17:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9293:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9296:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9289:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9289:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9281:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9144:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9147:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9153:4:1",
                "type": ""
              }
            ],
            "src": "9113:191:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9338:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9355:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9358:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9348:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9348:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9348:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9452:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9455:4:1",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9445:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9445:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9445:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9476:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9479:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9469:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9469:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9469:15:1"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "9310:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9543:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9553:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9564:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "9553:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9525:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "9535:7:1",
                "type": ""
              }
            ],
            "src": "9496:79:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9664:74:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9681:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9724:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9706:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9706:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9686:19:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9686:45:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9674:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9674:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9674:58:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9652:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9659:3:1",
                "type": ""
              }
            ],
            "src": "9581:157:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9888:253:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9961:6:1"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9970:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9899:61:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9899:75:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9899:75:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9983:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9994:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9999:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9990:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9990:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9983:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10074:6:1"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10083:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10012:61:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10012:75:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10012:75:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10096:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10107:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10112:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10103:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10103:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10096:3:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10125:10:1",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "10132:3:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10125:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9859:3:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9865:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9873:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9884:3:1",
                "type": ""
              }
            ],
            "src": "9744:397:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_result_$10(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_result_$10(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_result_$10(value)\n    }\n\n    function convert_t_enum$_result_$10_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_result_$10(value)\n    }\n\n    function abi_encode_t_enum$_result_$10_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_result_$10_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_result_$10__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_result_$10_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_direction_$14(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_direction_$14(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_direction_$14(value)\n    }\n\n    function abi_decode_tuple_t_enum$_direction_$14(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_direction_$14(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function validator_assert_t_enum$_direction_$14(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_direction_$14(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_direction_$14(value)\n    }\n\n    function convert_t_enum$_direction_$14_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_direction_$14(value)\n    }\n\n    function abi_encode_t_enum$_direction_$14_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_direction_$14_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint8_t_enum$_direction_$14_t_enum$_result_$10__to_t_address_t_uint8_t_uint8_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_direction_$14_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_result_$10_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wrong value\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256_t_enum$_direction_$14_t_uint256__to_t_address_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_direction_$14_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "25:3178:0:-:0;;;449:102;;;;;;;;;;488:10;472:5;;:27;;;;;;;;;;;;;;;;;;522:6;509:10;:19;;;;25:3178;;;;;;",
  "deployedSourceMap": "25:3178:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;989:105;;;;;;;;;;;;;:::i;:::-;;676:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;44:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1503:1698;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1099:398;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;823:161;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78:22;;;;:::o;989:105::-;1076:10;1032:7;:19;1040:10;1032:19;;;;;;;;;;;;;;;:33;;;:55;;;;;;;;;;;;;;;;;;989:105::o;676:113::-;721:6;751:5;738:10;:18;;;;773:9;766:16;;676:113;;;:::o;44:28::-;;;;;;;;;;;;:::o;1503:1698::-;1590:12;1576:26;;;;;;;;:::i;:::-;;:10;:26;;;;;;;;:::i;:::-;;;:58;;;;1620:14;1606:28;;;;;;;;:::i;:::-;;:10;:28;;;;;;;;:::i;:::-;;;1576:58;:90;;;;1652:14;1638:28;;;;;;;;:::i;:::-;;:10;:28;;;;;;;;:::i;:::-;;;1576:90;1568:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1771:17;1811:3;1791:17;:15;:17::i;:::-;:23;;;;:::i;:::-;1771:43;;1857:7;:19;1865:10;1857:19;;;;;;;;;;;;;;;:25;;1894:12;1857:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:7;:19;1926:10;1918:19;;;;;;;;;;;;;;;:30;;1954:10;1918:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2035:79;2043:7;:19;2051:10;2043:19;;;;;;;;;;;;;;;:33;;;;;;;;;;;;2078:12;2092:10;2104:9;2035:79;;;;;;;;;:::i;:::-;;;;;;;;2141:12;2127:26;;;;;;;;:::i;:::-;;:10;:26;;;;;;;;:::i;:::-;;;2124:981;;2186:2;2171:12;:17;2168:270;;;2207:7;:19;2215:10;2207:19;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;:57;2262:1;2250:9;:13;;;;:::i;:::-;2207:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2282:7;:19;2290:10;2282:19;;;;;;;;;;;;;;;:27;;2315:10;2282:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2168:270;;;2378:7;:19;2386:10;2378:19;;;;;;;;;;;;;;;:27;;2411:11;2378:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2168:270;2124:981;;;2470:14;2456:28;;;;;;;;:::i;:::-;;:10;:28;;;;;;;;:::i;:::-;;;2453:652;;2517:2;2502:12;:17;2499:255;;;2538:7;:19;2546:10;2538:19;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;:57;2593:1;2581:9;:13;;;;:::i;:::-;2538:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2613:7;:19;2621:10;2613:19;;;;;;;;;;;;;;;:27;;2646:10;2613:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2499:255;;;2694:7;:19;2702:10;2694:19;;;;;;;;;;;;;;;:27;;2727:11;2694:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2499:255;2453:652;;;2786:14;2772:28;;;;;;;;:::i;:::-;;:10;:28;;;;;;;;:::i;:::-;;;2769:336;;2834:2;2818:12;:18;:40;;;;2856:2;2840:12;:18;2818:40;2815:280;;;2878:7;:19;2886:10;2878:19;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;:58;2933:2;2921:9;:14;;;;:::i;:::-;2878:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:7;:19;2962:10;2954:19;;;;;;;;;;;;;;;:27;;2987:10;2954:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2815:280;;;3035:7;:19;3043:10;3035:19;;;;;;;;;;;;;;;:27;;3068:11;3035:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2815:280;2769:336;2453:652;2124:981;1558:1643;1503:1698;:::o;1099:398::-;1145:7;1154:5;1161:9;1172:6;1197:7;:19;1205:10;1197:19;;;;;;;;;;;;;;;:33;;;;;;;;;;;;1249:7;:19;1257:10;1249:19;;;;;;;;;;;;;;;:25;;1310:1;1275:7;:19;1283:10;1275:19;;;;;;;;;;;;;;;:25;;:32;;;;:36;;;;:::i;:::-;1249:63;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1330:7;:19;1338:10;1330:19;;;;;;;;;;;;;;;:30;;1401:1;1361:7;:19;1369:10;1361:19;;;;;;;;;;;;;;;:30;;:37;;;;:41;;;;:::i;:::-;1330:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:7;:19;1429:10;1421:19;;;;;;;;;;;;;;;:27;;1486:1;1449:7;:19;1457:10;1449:19;;;;;;;;;;;;;;;:27;;:34;;;;:38;;;;:::i;:::-;1421:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:300;;;;;;;;1099:398;;;;:::o;823:161::-;871:4;946:10;;927:16;:29;959:15;909:66;;;;;;;;;:::i;:::-;;;;;;;;;;;;;899:77;;;;;;894:83;;887:90;;823:161;:::o;396:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:114;1645:1;1638:5;1635:12;1625:46;;1651:18;;:::i;:::-;1625:46;1563:114;:::o;1683:129::-;1729:7;1758:5;1747:16;;1764:42;1800:5;1764:42;:::i;:::-;1683:129;;;:::o;1818:::-;1875:9;1908:33;1935:5;1908:33;:::i;:::-;1895:46;;1818:129;;;:::o;1953:145::-;2047:44;2085:5;2047:44;:::i;:::-;2042:3;2035:57;1953:145;;:::o;2104:236::-;2204:4;2242:2;2231:9;2227:18;2219:26;;2255:78;2330:1;2319:9;2315:17;2306:6;2255:78;:::i;:::-;2104:236;;;;:::o;2346:126::-;2383:7;2423:42;2416:5;2412:54;2401:65;;2346:126;;;:::o;2478:104::-;2523:7;2552:24;2570:5;2552:24;:::i;:::-;2541:35;;2478:104;;;:::o;2588:142::-;2691:32;2717:5;2691:32;:::i;:::-;2686:3;2679:45;2588:142;;:::o;2736:254::-;2845:4;2883:2;2872:9;2868:18;2860:26;;2896:87;2980:1;2969:9;2965:17;2956:6;2896:87;:::i;:::-;2736:254;;;;:::o;2996:111::-;3081:1;3074:5;3071:12;3061:40;;3097:1;3094;3087:12;3061:40;2996:111;:::o;3113:163::-;3171:5;3209:6;3196:20;3187:29;;3225:45;3264:5;3225:45;:::i;:::-;3113:163;;;;:::o;3282:353::-;3353:6;3402:2;3390:9;3381:7;3377:23;3373:32;3370:119;;;3408:79;;:::i;:::-;3370:119;3528:1;3553:65;3610:7;3601:6;3590:9;3586:22;3553:65;:::i;:::-;3543:75;;3499:129;3282:353;;;;:::o;3641:96::-;3678:7;3707:24;3725:5;3707:24;:::i;:::-;3696:35;;3641:96;;;:::o;3743:118::-;3830:24;3848:5;3830:24;:::i;:::-;3825:3;3818:37;3743:118;;:::o;3867:86::-;3902:7;3942:4;3935:5;3931:16;3920:27;;3867:86;;;:::o;3959:112::-;4042:22;4058:5;4042:22;:::i;:::-;4037:3;4030:35;3959:112;;:::o;4077:117::-;4162:1;4155:5;4152:12;4142:46;;4168:18;;:::i;:::-;4142:46;4077:117;:::o;4200:135::-;4249:7;4278:5;4267:16;;4284:45;4323:5;4284:45;:::i;:::-;4200:135;;;:::o;4341:::-;4401:9;4434:36;4464:5;4434:36;:::i;:::-;4421:49;;4341:135;;;:::o;4482:151::-;4579:47;4620:5;4579:47;:::i;:::-;4574:3;4567:60;4482:151;;:::o;4639:579::-;4829:4;4867:3;4856:9;4852:19;4844:27;;4881:71;4949:1;4938:9;4934:17;4925:6;4881:71;:::i;:::-;4962:68;5026:2;5015:9;5011:18;5002:6;4962:68;:::i;:::-;5040:82;5118:2;5107:9;5103:18;5094:6;5040:82;:::i;:::-;5132:79;5207:2;5196:9;5192:18;5183:6;5132:79;:::i;:::-;4639:579;;;;;;;:::o;5224:122::-;5297:24;5315:5;5297:24;:::i;:::-;5290:5;5287:35;5277:63;;5336:1;5333;5326:12;5277:63;5224:122;:::o;5352:139::-;5398:5;5436:6;5423:20;5414:29;;5452:33;5479:5;5452:33;:::i;:::-;5352:139;;;;:::o;5497:329::-;5556:6;5605:2;5593:9;5584:7;5580:23;5576:32;5573:119;;;5611:79;;:::i;:::-;5573:119;5731:1;5756:53;5801:7;5792:6;5781:9;5777:22;5756:53;:::i;:::-;5746:63;;5702:117;5497:329;;;;:::o;5832:169::-;5916:11;5950:6;5945:3;5938:19;5990:4;5985:3;5981:14;5966:29;;5832:169;;;;:::o;6007:161::-;6147:13;6143:1;6135:6;6131:14;6124:37;6007:161;:::o;6174:366::-;6316:3;6337:67;6401:2;6396:3;6337:67;:::i;:::-;6330:74;;6413:93;6502:3;6413:93;:::i;:::-;6531:2;6526:3;6522:12;6515:19;;6174:366;;;:::o;6546:419::-;6712:4;6750:2;6739:9;6735:18;6727:26;;6799:9;6793:4;6789:20;6785:1;6774:9;6770:17;6763:47;6827:131;6953:4;6827:131;:::i;:::-;6819:139;;6546:419;;;:::o;6971:180::-;7019:77;7016:1;7009:88;7116:4;7113:1;7106:15;7140:4;7137:1;7130:15;7157:176;7189:1;7206:20;7224:1;7206:20;:::i;:::-;7201:25;;7240:20;7258:1;7240:20;:::i;:::-;7235:25;;7279:1;7269:35;;7284:18;;:::i;:::-;7269:35;7325:1;7322;7318:9;7313:14;;7157:176;;;;:::o;7339:60::-;7367:3;7388:5;7381:12;;7339:60;;;:::o;7405:142::-;7455:9;7488:53;7506:34;7515:24;7533:5;7515:24;:::i;:::-;7506:34;:::i;:::-;7488:53;:::i;:::-;7475:66;;7405:142;;;:::o;7553:126::-;7603:9;7636:37;7667:5;7636:37;:::i;:::-;7623:50;;7553:126;;;:::o;7685:134::-;7743:9;7776:37;7807:5;7776:37;:::i;:::-;7763:50;;7685:134;;;:::o;7825:147::-;7920:45;7959:5;7920:45;:::i;:::-;7915:3;7908:58;7825:147;;:::o;7978:589::-;8173:4;8211:3;8200:9;8196:19;8188:27;;8225:79;8301:1;8290:9;8286:17;8277:6;8225:79;:::i;:::-;8314:72;8382:2;8371:9;8367:18;8358:6;8314:72;:::i;:::-;8396:82;8474:2;8463:9;8459:18;8450:6;8396:82;:::i;:::-;8488:72;8556:2;8545:9;8541:18;8532:6;8488:72;:::i;:::-;7978:589;;;;;;;:::o;8573:180::-;8621:77;8618:1;8611:88;8718:4;8715:1;8708:15;8742:4;8739:1;8732:15;8759:348;8799:7;8822:20;8840:1;8822:20;:::i;:::-;8817:25;;8856:20;8874:1;8856:20;:::i;:::-;8851:25;;9044:1;8976:66;8972:74;8969:1;8966:81;8961:1;8954:9;8947:17;8943:105;8940:131;;;9051:18;;:::i;:::-;8940:131;9099:1;9096;9092:9;9081:20;;8759:348;;;;:::o;9113:191::-;9153:4;9173:20;9191:1;9173:20;:::i;:::-;9168:25;;9207:20;9225:1;9207:20;:::i;:::-;9202:25;;9246:1;9243;9240:8;9237:34;;;9251:18;;:::i;:::-;9237:34;9296:1;9293;9289:9;9281:17;;9113:191;;;;:::o;9310:180::-;9358:77;9355:1;9348:88;9455:4;9452:1;9445:15;9479:4;9476:1;9469:15;9496:79;9535:7;9564:5;9553:16;;9496:79;;;:::o;9581:157::-;9686:45;9706:24;9724:5;9706:24;:::i;:::-;9686:45;:::i;:::-;9681:3;9674:58;9581:157;;:::o;9744:397::-;9884:3;9899:75;9970:3;9961:6;9899:75;:::i;:::-;9999:2;9994:3;9990:12;9983:19;;10012:75;10083:3;10074:6;10012:75;:::i;:::-;10112:2;10107:3;10103:12;10096:19;;10132:3;10125:10;;9744:397;;;;;:::o",
  "source": "pragma solidity ^0.8.0;\n\ncontract Dice{\n    address payable public owner;\n    uint public cryptoSalt; \n    enum result {\n        OK, \n        ERROR, \n        WIN, \n        LOSE\n    }\n    enum direction {\n        UP, \n        DOWN, \n        ZERO}\n    struct Player{\n        address payable playerAddress;\n        uint8[] rolls;\n        direction[] directions;\n        result[] results;\n    }\n\n    mapping (address => Player) public players;\n    \n    constructor(){\n        owner = payable(msg.sender);\n        cryptoSalt = 0xAAAA; // Default salt\n    }\n\n    event playLog(address player, uint number, direction _direction, uint value);\n    //Everyone can change salt value\n    function setSalt(uint _salt) public returns (result){\n        cryptoSalt = _salt;\n        return result.OK;\n    }\n    //Generate random number\n    function getRandomNumber() view public returns (uint) {\n        return uint(keccak256(abi.encodePacked((block.difficulty ^ cryptoSalt), block.timestamp)));\n    }\n    function initialisation() public {\n        players[msg.sender].playerAddress = payable(msg.sender);\n    }\n    function getPlayerInfo() public view returns (address, uint8, direction, result){\n        return (players[msg.sender].playerAddress, \n                players[msg.sender].rolls[players[msg.sender].rolls.length - 1],\n                players[msg.sender].directions[players[msg.sender].directions.length - 1],\n                players[msg.sender].results[players[msg.sender].results.length - 1]) ;\n    }\n\n    function playDice(direction _direction) public payable {\n        require(_direction == direction.UP || _direction == direction.DOWN || _direction == direction.ZERO, 'Wrong value');\n        //require(players[msg.sender].playerAddress == 0, 'You are not init');\n        uint randomNumber = getRandomNumber() % 101;\n        //Player memory _player;\n        players[msg.sender].rolls.push(uint8(randomNumber));\n        players[msg.sender].directions.push(_direction);\n        //player.playerAddress = payable(msg.sender);\n         emit playLog(players[msg.sender].playerAddress, randomNumber, _direction, msg.value);\n        if(_direction == direction.UP){\n            if(randomNumber > 50){\n                players[msg.sender].playerAddress.transfer(msg.value * 2);\n                players[msg.sender].results.push(result.WIN);\n            }else{               \n                players[msg.sender].results.push(result.LOSE);\n            }\n        }else if(_direction == direction.DOWN){\n            if(randomNumber < 49){\n                players[msg.sender].playerAddress.transfer(msg.value * 2);\n                players[msg.sender].results.push(result.WIN);\n            }else{\n                players[msg.sender].results.push(result.LOSE);\n            }\n        }else if(_direction == direction.ZERO){\n            if(randomNumber == 49 || randomNumber == 50 ){\n                players[msg.sender].playerAddress.transfer(msg.value * 10);\n                players[msg.sender].results.push(result.WIN);\n            }else{\n                players[msg.sender].results.push(result.LOSE);\n            }\n        }//else {\n    //    players[msg.sender].results.push(result.ERROR);\n       // }\n\n        \n\n\n    }\n}\n",
  "sourcePath": "/home/artem/truffleProjects/proj2/contracts/Dice.sol",
  "ast": {
    "absolutePath": "project:/contracts/Dice.sol",
    "exportedSymbols": {
      "Dice": [
        379
      ]
    },
    "id": 380,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Dice",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 379,
        "linearizedBaseContracts": [
          379
        ],
        "name": "Dice",
        "nameLocation": "34:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "67:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 379,
            "src": "44:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "44:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "59483e1a",
            "id": 5,
            "mutability": "mutable",
            "name": "cryptoSalt",
            "nameLocation": "90:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 379,
            "src": "78:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "78:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Dice.result",
            "id": 10,
            "members": [
              {
                "id": 6,
                "name": "OK",
                "nameLocation": "129:2:0",
                "nodeType": "EnumValue",
                "src": "129:2:0"
              },
              {
                "id": 7,
                "name": "ERROR",
                "nameLocation": "142:5:0",
                "nodeType": "EnumValue",
                "src": "142:5:0"
              },
              {
                "id": 8,
                "name": "WIN",
                "nameLocation": "158:3:0",
                "nodeType": "EnumValue",
                "src": "158:3:0"
              },
              {
                "id": 9,
                "name": "LOSE",
                "nameLocation": "172:4:0",
                "nodeType": "EnumValue",
                "src": "172:4:0"
              }
            ],
            "name": "result",
            "nameLocation": "112:6:0",
            "nodeType": "EnumDefinition",
            "src": "107:75:0"
          },
          {
            "canonicalName": "Dice.direction",
            "id": 14,
            "members": [
              {
                "id": 11,
                "name": "UP",
                "nameLocation": "212:2:0",
                "nodeType": "EnumValue",
                "src": "212:2:0"
              },
              {
                "id": 12,
                "name": "DOWN",
                "nameLocation": "225:4:0",
                "nodeType": "EnumValue",
                "src": "225:4:0"
              },
              {
                "id": 13,
                "name": "ZERO",
                "nameLocation": "240:4:0",
                "nodeType": "EnumValue",
                "src": "240:4:0"
              }
            ],
            "name": "direction",
            "nameLocation": "192:9:0",
            "nodeType": "EnumDefinition",
            "src": "187:58:0"
          },
          {
            "canonicalName": "Dice.Player",
            "id": 28,
            "members": [
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "playerAddress",
                "nameLocation": "289:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "273:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 15,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "273:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "rolls",
                "nameLocation": "320:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "312:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                  "typeString": "uint8[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 17,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 18,
                  "nodeType": "ArrayTypeName",
                  "src": "312:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                    "typeString": "uint8[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "directions",
                "nameLocation": "347:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "335:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_enum$_direction_$14_$dyn_storage_ptr",
                  "typeString": "enum Dice.direction[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 21,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20,
                      "name": "direction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14,
                      "src": "335:9:0"
                    },
                    "referencedDeclaration": 14,
                    "src": "335:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_direction_$14",
                      "typeString": "enum Dice.direction"
                    }
                  },
                  "id": 22,
                  "nodeType": "ArrayTypeName",
                  "src": "335:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_direction_$14_$dyn_storage_ptr",
                    "typeString": "enum Dice.direction[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "results",
                "nameLocation": "376:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "367:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage_ptr",
                  "typeString": "enum Dice.result[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 25,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24,
                      "name": "result",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "367:6:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "367:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_result_$10",
                      "typeString": "enum Dice.result"
                    }
                  },
                  "id": 26,
                  "nodeType": "ArrayTypeName",
                  "src": "367:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage_ptr",
                    "typeString": "enum Dice.result[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nameLocation": "257:6:0",
            "nodeType": "StructDefinition",
            "scope": 379,
            "src": "250:140:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2eb41ff",
            "id": 33,
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "431:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 379,
            "src": "396:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
              "typeString": "mapping(address => struct Dice.Player)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "405:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "396:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                "typeString": "mapping(address => struct Dice.Player)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "Player",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28,
                  "src": "416:6:0"
                },
                "referencedDeclaration": 28,
                "src": "416:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$28_storage_ptr",
                  "typeString": "struct Dice.Player"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "462:89:0",
              "statements": [
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "472:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "488:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "488:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "480:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "480:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "480:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "472:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "472:27:0"
                },
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44,
                      "name": "cryptoSalt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "509:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307841414141",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "522:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_43690_by_1",
                        "typeString": "int_const 43690"
                      },
                      "value": "0xAAAA"
                    },
                    "src": "509:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "509:19:0"
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:0"
            },
            "scope": 379,
            "src": "449:102:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "e9292d8d1e39a1684e5c8f41f67409c6f88e062828e3cf5f732c3136b04b4e53",
            "id": 60,
            "name": "playLog",
            "nameLocation": "563:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "579:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "571:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "number",
                  "nameLocation": "592:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "587:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_direction",
                  "nameLocation": "610:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "600:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_direction_$14",
                    "typeString": "enum Dice.direction"
                  },
                  "typeName": {
                    "id": 55,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54,
                      "name": "direction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14,
                      "src": "600:9:0"
                    },
                    "referencedDeclaration": 14,
                    "src": "600:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_direction_$14",
                      "typeString": "enum Dice.direction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "627:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "622:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "570:63:0"
            },
            "src": "557:77:0"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "728:61:0",
              "statements": [
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "cryptoSalt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "738:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69,
                      "name": "_salt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "751:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "738:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "738:18:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 72,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "773:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_result_$10_$",
                        "typeString": "type(enum Dice.result)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "OK",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6,
                    "src": "773:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_result_$10",
                      "typeString": "enum Dice.result"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 74,
                  "nodeType": "Return",
                  "src": "766:16:0"
                }
              ]
            },
            "functionSelector": "5e0cc9c6",
            "id": 76,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSalt",
            "nameLocation": "685:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "698:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "693:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:12:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "721:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_result_$10",
                    "typeString": "enum Dice.result"
                  },
                  "typeName": {
                    "id": 65,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64,
                      "name": "result",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "721:6:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "721:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_result_$10",
                      "typeString": "enum Dice.result"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:8:0"
            },
            "scope": 379,
            "src": "676:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "877:107:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 89,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 86,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967292,
                                        "src": "927:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 87,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "difficulty",
                                      "nodeType": "MemberAccess",
                                      "src": "927:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "^",
                                    "rightExpression": {
                                      "id": 88,
                                      "name": "cryptoSalt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5,
                                      "src": "946:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "927:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 90,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "926:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 91,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "959:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "959:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 84,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "909:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "909:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "909:66:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 83,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "899:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "899:77:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "894:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "894:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80,
                  "id": 96,
                  "nodeType": "Return",
                  "src": "887:90:0"
                }
              ]
            },
            "functionSelector": "dbdff2c1",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nameLocation": "832:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:2:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "871:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "870:6:0"
            },
            "scope": 379,
            "src": "823:161:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1022:72:0",
              "statements": [
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 101,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1032:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                            "typeString": "mapping(address => struct Dice.Player storage ref)"
                          }
                        },
                        "id": 104,
                        "indexExpression": {
                          "expression": {
                            "id": 102,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1040:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1040:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1032:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$28_storage",
                          "typeString": "struct Dice.Player storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "playerAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1032:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 108,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1076:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1076:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1068:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1068:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1068:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1032:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:55:0"
                }
              ]
            },
            "functionSelector": "596dbaa5",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialisation",
            "nameLocation": "998:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:2:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:0"
            },
            "scope": 379,
            "src": "989:105:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1179:318:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 127,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "1197:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                              "typeString": "mapping(address => struct Dice.Player storage ref)"
                            }
                          },
                          "id": 130,
                          "indexExpression": {
                            "expression": {
                              "id": 128,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1205:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1205:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1197:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$28_storage",
                            "typeString": "struct Dice.Player storage ref"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "playerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "1197:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 132,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "1249:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                "typeString": "mapping(address => struct Dice.Player storage ref)"
                              }
                            },
                            "id": 135,
                            "indexExpression": {
                              "expression": {
                                "id": 133,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1257:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1257:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1249:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$28_storage",
                              "typeString": "struct Dice.Player storage ref"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rolls",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1249:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                            "typeString": "uint8[] storage ref"
                          }
                        },
                        "id": 145,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 137,
                                  "name": "players",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "1275:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                    "typeString": "mapping(address => struct Dice.Player storage ref)"
                                  }
                                },
                                "id": 140,
                                "indexExpression": {
                                  "expression": {
                                    "id": 138,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1283:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1283:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1275:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$28_storage",
                                  "typeString": "struct Dice.Player storage ref"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rolls",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "1275:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                                "typeString": "uint8[] storage ref"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1275:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1310:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1275:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1249:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 146,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "1330:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                "typeString": "mapping(address => struct Dice.Player storage ref)"
                              }
                            },
                            "id": 149,
                            "indexExpression": {
                              "expression": {
                                "id": 147,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1338:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1338:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1330:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$28_storage",
                              "typeString": "struct Dice.Player storage ref"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "directions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "1330:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_direction_$14_$dyn_storage",
                            "typeString": "enum Dice.direction[] storage ref"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 151,
                                  "name": "players",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "1361:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                    "typeString": "mapping(address => struct Dice.Player storage ref)"
                                  }
                                },
                                "id": 154,
                                "indexExpression": {
                                  "expression": {
                                    "id": 152,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1369:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1369:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1361:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$28_storage",
                                  "typeString": "struct Dice.Player storage ref"
                                }
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "directions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "1361:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_direction_$14_$dyn_storage",
                                "typeString": "enum Dice.direction[] storage ref"
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1361:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1401:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1361:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1330:73:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 160,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "1421:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                "typeString": "mapping(address => struct Dice.Player storage ref)"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "expression": {
                                "id": 161,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1429:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1429:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1421:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$28_storage",
                              "typeString": "struct Dice.Player storage ref"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "results",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "1421:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                            "typeString": "enum Dice.result[] storage ref"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 165,
                                  "name": "players",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "1449:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                    "typeString": "mapping(address => struct Dice.Player storage ref)"
                                  }
                                },
                                "id": 168,
                                "indexExpression": {
                                  "expression": {
                                    "id": 166,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1457:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1457:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1449:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$28_storage",
                                  "typeString": "struct Dice.Player storage ref"
                                }
                              },
                              "id": 169,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "results",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "1449:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                                "typeString": "enum Dice.result[] storage ref"
                              }
                            },
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1449:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1486:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1449:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1421:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_result_$10",
                          "typeString": "enum Dice.result"
                        }
                      }
                    ],
                    "id": 174,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1196:293:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint8_$_t_enum$_direction_$14_$_t_enum$_result_$10_$",
                      "typeString": "tuple(address payable,uint8,enum Dice.direction,enum Dice.result)"
                    }
                  },
                  "functionReturnParameters": 126,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "1189:300:0"
                }
              ]
            },
            "functionSelector": "d1df81df",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayerInfo",
            "nameLocation": "1108:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:2:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1145:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1154:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1161:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_direction_$14",
                    "typeString": "enum Dice.direction"
                  },
                  "typeName": {
                    "id": 121,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120,
                      "name": "direction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14,
                      "src": "1161:9:0"
                    },
                    "referencedDeclaration": 14,
                    "src": "1161:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_direction_$14",
                      "typeString": "enum Dice.direction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1172:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_result_$10",
                    "typeString": "enum Dice.result"
                  },
                  "typeName": {
                    "id": 124,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 123,
                      "name": "result",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "1172:6:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "1172:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_result_$10",
                      "typeString": "enum Dice.result"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:35:0"
            },
            "scope": 379,
            "src": "1099:398:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "1558:1643:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_direction_$14",
                              "typeString": "enum Dice.direction"
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 184,
                              "name": "_direction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 180,
                              "src": "1576:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_direction_$14",
                                "typeString": "enum Dice.direction"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 185,
                                "name": "direction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "1590:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_direction_$14_$",
                                  "typeString": "type(enum Dice.direction)"
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "UP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11,
                              "src": "1590:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_direction_$14",
                                "typeString": "enum Dice.direction"
                              }
                            },
                            "src": "1576:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_direction_$14",
                              "typeString": "enum Dice.direction"
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 188,
                              "name": "_direction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 180,
                              "src": "1606:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_direction_$14",
                                "typeString": "enum Dice.direction"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 189,
                                "name": "direction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "1620:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_direction_$14_$",
                                  "typeString": "type(enum Dice.direction)"
                                }
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "DOWN",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12,
                              "src": "1620:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_direction_$14",
                                "typeString": "enum Dice.direction"
                              }
                            },
                            "src": "1606:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1576:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_direction_$14",
                            "typeString": "enum Dice.direction"
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 193,
                            "name": "_direction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1638:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_direction_$14",
                              "typeString": "enum Dice.direction"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 194,
                              "name": "direction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1652:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_direction_$14_$",
                                "typeString": "type(enum Dice.direction)"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ZERO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "1652:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_direction_$14",
                              "typeString": "enum Dice.direction"
                            }
                          },
                          "src": "1638:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1576:90:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672076616c7565",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1668:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
                          "typeString": "literal_string \"Wrong value\""
                        },
                        "value": "Wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
                          "typeString": "literal_string \"Wrong value\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1568:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:114:0"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "randomNumber",
                      "nameLocation": "1776:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 377,
                      "src": "1771:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1771:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 203,
                        "name": "getRandomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1791:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1791:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "313031",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1811:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_101_by_1",
                        "typeString": "int_const 101"
                      },
                      "value": "101"
                    },
                    "src": "1791:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1771:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 216,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "1894:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1888:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 214,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1888:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 208,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "1857:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                              "typeString": "mapping(address => struct Dice.Player storage ref)"
                            }
                          },
                          "id": 211,
                          "indexExpression": {
                            "expression": {
                              "id": 209,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1865:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1865:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1857:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$28_storage",
                            "typeString": "struct Dice.Player storage ref"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rolls",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "1857:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1857:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint8_$dyn_storage_ptr_$_t_uint8_$returns$__$bound_to$_t_array$_t_uint8_$dyn_storage_ptr_$",
                        "typeString": "function (uint8[] storage pointer,uint8)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 226,
                        "name": "_direction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1954:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 220,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "1918:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                              "typeString": "mapping(address => struct Dice.Player storage ref)"
                            }
                          },
                          "id": 223,
                          "indexExpression": {
                            "expression": {
                              "id": 221,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1926:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1926:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1918:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$28_storage",
                            "typeString": "struct Dice.Player storage ref"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "directions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "1918:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_direction_$14_$dyn_storage",
                          "typeString": "enum Dice.direction[] storage ref"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1918:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_direction_$14_$dyn_storage_ptr_$_t_enum$_direction_$14_$returns$__$bound_to$_t_array$_t_enum$_direction_$14_$dyn_storage_ptr_$",
                        "typeString": "function (enum Dice.direction[] storage pointer,enum Dice.direction)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1918:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:47:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 230,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2043:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                              "typeString": "mapping(address => struct Dice.Player storage ref)"
                            }
                          },
                          "id": 233,
                          "indexExpression": {
                            "expression": {
                              "id": 231,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2051:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2051:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2043:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$28_storage",
                            "typeString": "struct Dice.Player storage ref"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "playerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "2043:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 235,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2078:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 236,
                        "name": "_direction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2092:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        }
                      },
                      {
                        "expression": {
                          "id": 237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2104:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2104:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 229,
                      "name": "playLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_direction_$14_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,enum Dice.direction,uint256)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "EmitStatement",
                  "src": "2030:84:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_direction_$14",
                      "typeString": "enum Dice.direction"
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 241,
                      "name": "_direction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2127:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_direction_$14",
                        "typeString": "enum Dice.direction"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 242,
                        "name": "direction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2141:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_direction_$14_$",
                          "typeString": "type(enum Dice.direction)"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2141:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_direction_$14",
                        "typeString": "enum Dice.direction"
                      }
                    },
                    "src": "2127:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_direction_$14",
                        "typeString": "enum Dice.direction"
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 284,
                        "name": "_direction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2456:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 285,
                          "name": "direction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "2470:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_direction_$14_$",
                            "typeString": "type(enum Dice.direction)"
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "DOWN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2470:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        }
                      },
                      "src": "2456:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_direction_$14",
                          "typeString": "enum Dice.direction"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 327,
                          "name": "_direction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2772:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_direction_$14",
                            "typeString": "enum Dice.direction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 328,
                            "name": "direction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2786:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_direction_$14_$",
                              "typeString": "type(enum Dice.direction)"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ZERO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "2786:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_direction_$14",
                            "typeString": "enum Dice.direction"
                          }
                        },
                        "src": "2772:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 374,
                      "nodeType": "IfStatement",
                      "src": "2769:336:0",
                      "trueBody": {
                        "id": 373,
                        "nodeType": "Block",
                        "src": "2801:304:0",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 331,
                                  "name": "randomNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "2818:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3439",
                                  "id": 332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2834:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_49_by_1",
                                    "typeString": "int_const 49"
                                  },
                                  "value": "49"
                                },
                                "src": "2818:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 334,
                                  "name": "randomNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "2840:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3530",
                                  "id": 335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2856:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  },
                                  "value": "50"
                                },
                                "src": "2840:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2818:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 371,
                              "nodeType": "Block",
                              "src": "3017:78:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 367,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10,
                                          "src": "3068:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_result_$10_$",
                                            "typeString": "type(enum Dice.result)"
                                          }
                                        },
                                        "id": 368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "LOSE",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9,
                                        "src": "3068:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_result_$10",
                                          "typeString": "enum Dice.result"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_result_$10",
                                          "typeString": "enum Dice.result"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 361,
                                            "name": "players",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33,
                                            "src": "3035:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                              "typeString": "mapping(address => struct Dice.Player storage ref)"
                                            }
                                          },
                                          "id": 364,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 362,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "3043:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 363,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "3043:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3035:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Player_$28_storage",
                                            "typeString": "struct Dice.Player storage ref"
                                          }
                                        },
                                        "id": 365,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "results",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 27,
                                        "src": "3035:27:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                                          "typeString": "enum Dice.result[] storage ref"
                                        }
                                      },
                                      "id": 366,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "push",
                                      "nodeType": "MemberAccess",
                                      "src": "3035:32:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$_t_enum$_result_$10_$returns$__$bound_to$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$",
                                        "typeString": "function (enum Dice.result[] storage pointer,enum Dice.result)"
                                      }
                                    },
                                    "id": 369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3035:45:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 370,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3035:45:0"
                                }
                              ]
                            },
                            "id": 372,
                            "nodeType": "IfStatement",
                            "src": "2815:280:0",
                            "trueBody": {
                              "id": 360,
                              "nodeType": "Block",
                              "src": "2860:153:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 347,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 344,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2921:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 345,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "src": "2921:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "3130",
                                          "id": 346,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2933:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "src": "2921:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 338,
                                            "name": "players",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33,
                                            "src": "2878:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                              "typeString": "mapping(address => struct Dice.Player storage ref)"
                                            }
                                          },
                                          "id": 341,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 339,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "2886:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 340,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "2886:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2878:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Player_$28_storage",
                                            "typeString": "struct Dice.Player storage ref"
                                          }
                                        },
                                        "id": 342,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "playerAddress",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 16,
                                        "src": "2878:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "id": 343,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "src": "2878:42:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                        "typeString": "function (uint256)"
                                      }
                                    },
                                    "id": 348,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2878:58:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 349,
                                  "nodeType": "ExpressionStatement",
                                  "src": "2878:58:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 356,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10,
                                          "src": "2987:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_result_$10_$",
                                            "typeString": "type(enum Dice.result)"
                                          }
                                        },
                                        "id": 357,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "WIN",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8,
                                        "src": "2987:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_result_$10",
                                          "typeString": "enum Dice.result"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_result_$10",
                                          "typeString": "enum Dice.result"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 350,
                                            "name": "players",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33,
                                            "src": "2954:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                              "typeString": "mapping(address => struct Dice.Player storage ref)"
                                            }
                                          },
                                          "id": 353,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 351,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "2962:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 352,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "2962:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2954:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Player_$28_storage",
                                            "typeString": "struct Dice.Player storage ref"
                                          }
                                        },
                                        "id": 354,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "results",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 27,
                                        "src": "2954:27:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                                          "typeString": "enum Dice.result[] storage ref"
                                        }
                                      },
                                      "id": 355,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "push",
                                      "nodeType": "MemberAccess",
                                      "src": "2954:32:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$_t_enum$_result_$10_$returns$__$bound_to$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$",
                                        "typeString": "function (enum Dice.result[] storage pointer,enum Dice.result)"
                                      }
                                    },
                                    "id": 358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2954:44:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 359,
                                  "nodeType": "ExpressionStatement",
                                  "src": "2954:44:0"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "id": 375,
                    "nodeType": "IfStatement",
                    "src": "2453:652:0",
                    "trueBody": {
                      "id": 326,
                      "nodeType": "Block",
                      "src": "2485:279:0",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 288,
                              "name": "randomNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "2502:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "3439",
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2517:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_49_by_1",
                                "typeString": "int_const 49"
                              },
                              "value": "49"
                            },
                            "src": "2502:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 324,
                            "nodeType": "Block",
                            "src": "2676:78:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 320,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "2727:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_result_$10_$",
                                          "typeString": "type(enum Dice.result)"
                                        }
                                      },
                                      "id": 321,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "LOSE",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 9,
                                      "src": "2727:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_result_$10",
                                        "typeString": "enum Dice.result"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_result_$10",
                                        "typeString": "enum Dice.result"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 314,
                                          "name": "players",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 33,
                                          "src": "2694:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                            "typeString": "mapping(address => struct Dice.Player storage ref)"
                                          }
                                        },
                                        "id": 317,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 315,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2702:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 316,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2702:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2694:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$28_storage",
                                          "typeString": "struct Dice.Player storage ref"
                                        }
                                      },
                                      "id": 318,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "results",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 27,
                                      "src": "2694:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                                        "typeString": "enum Dice.result[] storage ref"
                                      }
                                    },
                                    "id": 319,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "push",
                                    "nodeType": "MemberAccess",
                                    "src": "2694:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$_t_enum$_result_$10_$returns$__$bound_to$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$",
                                      "typeString": "function (enum Dice.result[] storage pointer,enum Dice.result)"
                                    }
                                  },
                                  "id": 322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2694:45:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 323,
                                "nodeType": "ExpressionStatement",
                                "src": "2694:45:0"
                              }
                            ]
                          },
                          "id": 325,
                          "nodeType": "IfStatement",
                          "src": "2499:255:0",
                          "trueBody": {
                            "id": 313,
                            "nodeType": "Block",
                            "src": "2520:152:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 297,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2581:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 298,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "2581:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "32",
                                        "id": 299,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2593:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "2581:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 291,
                                          "name": "players",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 33,
                                          "src": "2538:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                            "typeString": "mapping(address => struct Dice.Player storage ref)"
                                          }
                                        },
                                        "id": 294,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 292,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2546:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 293,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2546:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2538:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$28_storage",
                                          "typeString": "struct Dice.Player storage ref"
                                        }
                                      },
                                      "id": 295,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "playerAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 16,
                                      "src": "2538:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "src": "2538:42:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                      "typeString": "function (uint256)"
                                    }
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2538:57:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 302,
                                "nodeType": "ExpressionStatement",
                                "src": "2538:57:0"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 309,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "2646:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_result_$10_$",
                                          "typeString": "type(enum Dice.result)"
                                        }
                                      },
                                      "id": 310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "WIN",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8,
                                      "src": "2646:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_result_$10",
                                        "typeString": "enum Dice.result"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_result_$10",
                                        "typeString": "enum Dice.result"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 303,
                                          "name": "players",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 33,
                                          "src": "2613:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                            "typeString": "mapping(address => struct Dice.Player storage ref)"
                                          }
                                        },
                                        "id": 306,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 304,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2621:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 305,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2621:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2613:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$28_storage",
                                          "typeString": "struct Dice.Player storage ref"
                                        }
                                      },
                                      "id": 307,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "results",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 27,
                                      "src": "2613:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                                        "typeString": "enum Dice.result[] storage ref"
                                      }
                                    },
                                    "id": 308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "push",
                                    "nodeType": "MemberAccess",
                                    "src": "2613:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$_t_enum$_result_$10_$returns$__$bound_to$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$",
                                      "typeString": "function (enum Dice.result[] storage pointer,enum Dice.result)"
                                    }
                                  },
                                  "id": 311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2613:44:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 312,
                                "nodeType": "ExpressionStatement",
                                "src": "2613:44:0"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 376,
                  "nodeType": "IfStatement",
                  "src": "2124:981:0",
                  "trueBody": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "2154:294:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 245,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "2171:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "3530",
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2186:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "2171:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 281,
                          "nodeType": "Block",
                          "src": "2345:93:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 277,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "2411:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_result_$10_$",
                                        "typeString": "type(enum Dice.result)"
                                      }
                                    },
                                    "id": 278,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "LOSE",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9,
                                    "src": "2411:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_result_$10",
                                      "typeString": "enum Dice.result"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_result_$10",
                                      "typeString": "enum Dice.result"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 271,
                                        "name": "players",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33,
                                        "src": "2378:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                          "typeString": "mapping(address => struct Dice.Player storage ref)"
                                        }
                                      },
                                      "id": 274,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 272,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2386:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 273,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2386:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2378:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$28_storage",
                                        "typeString": "struct Dice.Player storage ref"
                                      }
                                    },
                                    "id": 275,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "results",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 27,
                                    "src": "2378:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                                      "typeString": "enum Dice.result[] storage ref"
                                    }
                                  },
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "2378:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$_t_enum$_result_$10_$returns$__$bound_to$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$",
                                    "typeString": "function (enum Dice.result[] storage pointer,enum Dice.result)"
                                  }
                                },
                                "id": 279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2378:45:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 280,
                              "nodeType": "ExpressionStatement",
                              "src": "2378:45:0"
                            }
                          ]
                        },
                        "id": 282,
                        "nodeType": "IfStatement",
                        "src": "2168:270:0",
                        "trueBody": {
                          "id": 270,
                          "nodeType": "Block",
                          "src": "2189:152:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 257,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 254,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "2250:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "2250:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "32",
                                      "id": 256,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2262:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "2250:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 248,
                                        "name": "players",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33,
                                        "src": "2207:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                          "typeString": "mapping(address => struct Dice.Player storage ref)"
                                        }
                                      },
                                      "id": 251,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 249,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2215:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 250,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2215:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2207:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$28_storage",
                                        "typeString": "struct Dice.Player storage ref"
                                      }
                                    },
                                    "id": 252,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "playerAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "2207:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "2207:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2207:57:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 259,
                              "nodeType": "ExpressionStatement",
                              "src": "2207:57:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 266,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "2315:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_result_$10_$",
                                        "typeString": "type(enum Dice.result)"
                                      }
                                    },
                                    "id": 267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "WIN",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8,
                                    "src": "2315:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_result_$10",
                                      "typeString": "enum Dice.result"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_result_$10",
                                      "typeString": "enum Dice.result"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 260,
                                        "name": "players",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33,
                                        "src": "2282:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$28_storage_$",
                                          "typeString": "mapping(address => struct Dice.Player storage ref)"
                                        }
                                      },
                                      "id": 263,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 261,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2290:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 262,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2290:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2282:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$28_storage",
                                        "typeString": "struct Dice.Player storage ref"
                                      }
                                    },
                                    "id": 264,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "results",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 27,
                                    "src": "2282:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_result_$10_$dyn_storage",
                                      "typeString": "enum Dice.result[] storage ref"
                                    }
                                  },
                                  "id": 265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "2282:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$_t_enum$_result_$10_$returns$__$bound_to$_t_array$_t_enum$_result_$10_$dyn_storage_ptr_$",
                                    "typeString": "function (enum Dice.result[] storage pointer,enum Dice.result)"
                                  }
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2282:44:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 269,
                              "nodeType": "ExpressionStatement",
                              "src": "2282:44:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a6317b6f",
            "id": 378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "playDice",
            "nameLocation": "1512:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_direction",
                  "nameLocation": "1531:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "1521:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_direction_$14",
                    "typeString": "enum Dice.direction"
                  },
                  "typeName": {
                    "id": 179,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 178,
                      "name": "direction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14,
                      "src": "1521:9:0"
                    },
                    "referencedDeclaration": 14,
                    "src": "1521:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_direction_$14",
                      "typeString": "enum Dice.direction"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1520:22:0"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:0:0"
            },
            "scope": 379,
            "src": "1503:1698:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 380,
        "src": "25:3178:0",
        "usedErrors": []
      }
    ],
    "src": "0:3204:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x08B68B747ceb36b1eb1679170477Db7E6a7B027f",
      "transactionHash": "0xe9777932911b6f56d61243e7b2403f61137583f90534bdffbfc5c5bfe9c5adfb"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-16T20:04:13.747Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}